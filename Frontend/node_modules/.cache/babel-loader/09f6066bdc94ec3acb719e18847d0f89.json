{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport { Store } from \"../flux\";\nimport { default as SimplePeer } from \"../services/peer\";\nimport FileOperations from \"./fileOperations\";\nimport { default as SocketService } from \"./socketService\";\nvar channelConfig = {\n  ordered: true,\n  // guarantee order of transmission\n  maxPacketLifeTime: 3000 // in milliseconds\n\n};\n\nvar PeerService = /*#__PURE__*/function (_React$Component) {\n  _inherits(PeerService, _React$Component);\n\n  function PeerService() {\n    var _this;\n\n    _classCallCheck(this, PeerService);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PeerService).call(this));\n\n    _this.newUserJoined = function () {\n      _this.simple_peer = new SimplePeer({\n        channelConfig: channelConfig,\n        trickle: false\n      });\n      _this.answerSent = false;\n      SocketService.send('init_peer', {\n        type: 'init_peer'\n      });\n    };\n\n    _this.initPeer = function () {\n      _this.simple_peer = new SimplePeer({\n        initiator: true,\n        channelConfig: channelConfig,\n        trickle: false\n      });\n\n      _this.simple_peer.on('signal', function (data) {\n        if (data.renegotiate || data.transceiverRequest) return;\n        console.log(\"Offer Generated: \", data);\n        SocketService.send('send_offer', data);\n      });\n    };\n\n    _this.sendOffer = function (signal) {\n      signal = JSON.stringify(signal);\n\n      _this.simple_peer.signal(signal); //consuming offer data\n\n\n      _this.simple_peer.on('signal', function (data) {\n        if (data.renegotiate || data.transceiverRequest) return;\n        console.log(\"Answer Generated: \", data);\n\n        if (!_this.answerSent) {\n          SocketService.send('send_answer', data);\n          _this.answerSent = true;\n        }\n      });\n\n      _this.onConnect();\n    };\n\n    _this.sendAnswer = function (signal) {\n      signal = JSON.stringify(signal);\n\n      _this.simple_peer.signal(signal); //consuming answer data\n\n\n      _this.onConnect();\n    };\n\n    _this.simple_peer = null;\n    _this.answerSent = null;\n    return _this;\n  }\n  /**\n   * This function is triggered when a new user is joined.\n   * A new simple peer object is created on the local user's browser.\n   * The init_peer message is sent to the other user's browser.\n   */\n\n\n  _createClass(PeerService, [{\n    key: \"onConnect\",\n    value: function onConnect() {\n      var _this2 = this;\n\n      try {\n        //These are the events triggered by the Simple Peer objects internally.\n        this.simple_peer.on('connect', function () {\n          //Trigger the toggleRoomEmpty() function, this triggers a notification on the Home page.\n          Store.toggleRoomEmpty();\n          Store.peerConnectionEstablished();\n          console.log(\"peer connected!\");\n        });\n        this.simple_peer.on('data', function (data) {\n          //If a user has requested a file, the file data is relayed to receiveFile function and processed further.\n          if (Store.getFileRequested()) FileOperations.receiveFile(data);\n        });\n        this.simple_peer.on('close', function () {\n          //Triggered to close and clean up connection objects.\n          console.log(\"Close Called.\");\n\n          _this2.closeConnection();\n        });\n        this.simple_peer.on('error', function (error) {\n          //Triggered to close and clean up connection objects in case of errors.\n          console.error(\"Error in Peer\", error);\n          Store.toggleRoomEmpty();\n\n          _this2.closeConnection();\n        });\n      } catch (error) {\n        console.error(\"Error in OnConnect, \", error);\n      }\n    }\n  }, {\n    key: \"closeConnection\",\n    value: function closeConnection() {\n      //Cleanup and reset the local user's browser objects.\n      if (this.simple_peer) {\n        this.simple_peer.destroy();\n        this.answerSent = false;\n        this.simple_peer = null;\n        Store.toggleRoomEmpty();\n        Store.peerConnectionClosed();\n      }\n    }\n  }]);\n\n  return PeerService;\n}(React.Component);\n\nvar singletonPeerService = /*#__PURE__*/function () {\n  function singletonPeerService() {\n    _classCallCheck(this, singletonPeerService);\n  }\n\n  _createClass(singletonPeerService, null, [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      var object = new PeerService();\n      return object;\n    }\n  }, {\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!singletonPeerService.instance) {\n        singletonPeerService.instance = singletonPeerService.createInstance();\n      }\n\n      return singletonPeerService.instance;\n    }\n  }]);\n\n  return singletonPeerService;\n}();\n\nsingletonPeerService.instance = null;\nexport default singletonPeerService.getInstance();","map":{"version":3,"names":["React","Store","default","SimplePeer","FileOperations","SocketService","channelConfig","ordered","maxPacketLifeTime","PeerService","newUserJoined","simple_peer","trickle","answerSent","send","type","initPeer","initiator","on","data","renegotiate","transceiverRequest","console","log","sendOffer","signal","JSON","stringify","onConnect","sendAnswer","toggleRoomEmpty","peerConnectionEstablished","getFileRequested","receiveFile","closeConnection","error","destroy","peerConnectionClosed","Component","singletonPeerService","object","instance","createInstance","getInstance"],"sources":["C:/Users/simra/Documents/P2P FILE SHARING VERSIONS/P2P File Sharing Project 5.0/Frontend/src/services/peerService.js"],"sourcesContent":["import React from \"react\";\nimport { Store } from \"../flux\";\nimport { default as SimplePeer } from \"../services/peer\";\nimport FileOperations from \"./fileOperations\";\nimport { default as SocketService } from \"./socketService\";\n\nconst channelConfig = {\n    ordered: true, // guarantee order of transmission\n    maxPacketLifeTime: 3000, // in milliseconds\n};\n\nclass PeerService extends React.Component {\n    constructor() {\n        super();\n        this.simple_peer = null;\n        this.answerSent = null;\n    }\n\n    /**\n     * This function is triggered when a new user is joined.\n     * A new simple peer object is created on the local user's browser.\n     * The init_peer message is sent to the other user's browser.\n     */\n    newUserJoined = () => {\n        this.simple_peer = new SimplePeer({ channelConfig, trickle: false });\n        this.answerSent = false;\n        SocketService.send('init_peer', { type: 'init_peer' });\n    }\n\n    /**\n     * This function is triggered when init_peer message is received at the remote user's browser.\n     * The Simple Peer object is created at the remote user's browser.\n     * The Simple Peer is created as an initiator, and it triggers a connection by creating an offer immediately.\n     * This offer is transmitted to the local user.\n     */\n    initPeer = () => {\n        this.simple_peer = new SimplePeer({ initiator: true, channelConfig, trickle: false });\n        this.simple_peer.on('signal', data => {\n            if (data.renegotiate || data.transceiverRequest) return\n            console.log(\"Offer Generated: \", data);\n            SocketService.send('send_offer', data);\n        });\n    }\n\n    /**\n     * When the offer is received at the local user's browser.\n     * The offer is fed into the local user's peer object.\n     * The local Simple Peer object, generates an answer.\n     * This answer is shared with the remote user.\n     */\n    sendOffer = (signal) => {\n        signal = JSON.stringify(signal)\n        this.simple_peer.signal(signal); //consuming offer data\n\n        this.simple_peer.on('signal', data => {\n            if (data.renegotiate || data.transceiverRequest) return\n            console.log(\"Answer Generated: \", data);\n            if (!this.answerSent) {\n                SocketService.send('send_answer', data);\n                this.answerSent = true;\n            }\n        });\n        this.onConnect();\n    }\n\n    /**\n     * The answer is received at the remote user's browser.\n     * The answer is consumed by the remote user, and hence a connection is established between the two users.\n     */\n    sendAnswer = (signal) => {\n        signal = JSON.stringify(signal)\n        this.simple_peer.signal(signal); //consuming answer data\n        this.onConnect();\n    }\n\n    onConnect() {\n        try {\n            //These are the events triggered by the Simple Peer objects internally.\n            this.simple_peer.on('connect', () => {\n                //Trigger the toggleRoomEmpty() function, this triggers a notification on the Home page.\n                Store.toggleRoomEmpty();\n                Store.peerConnectionEstablished();\n                console.log(\"peer connected!\");\n            });\n            this.simple_peer.on('data', (data) => {\n                //If a user has requested a file, the file data is relayed to receiveFile function and processed further.\n                if (Store.getFileRequested())\n                    FileOperations.receiveFile(data);\n            });\n            this.simple_peer.on('close', () => {\n                //Triggered to close and clean up connection objects.\n                console.log(\"Close Called.\")\n                this.closeConnection();\n            })\n            this.simple_peer.on('error', (error) => {\n                //Triggered to close and clean up connection objects in case of errors.\n                console.error(\"Error in Peer\", error);\n                Store.toggleRoomEmpty();\n                this.closeConnection();\n            })\n        } catch (error) {\n            console.error(\"Error in OnConnect, \", error);\n        }\n    }\n\n    closeConnection() {\n        //Cleanup and reset the local user's browser objects.\n        if (this.simple_peer) {\n            this.simple_peer.destroy();\n            this.answerSent = false;\n            this.simple_peer = null;\n            Store.toggleRoomEmpty();\n            Store.peerConnectionClosed();\n        }\n    }\n\n}\n\nclass singletonPeerService {\n\n    static instance = null;\n    static createInstance() {\n        var object = new PeerService();\n        return object;\n    }\n  \n    static getInstance () {\n        if (!singletonPeerService.instance) {\n            singletonPeerService.instance = singletonPeerService.createInstance();\n        }\n        return singletonPeerService.instance;\n    }\n  }\n\nexport default singletonPeerService.getInstance();\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASF,OAAO,IAAIG,aAApB,QAAyC,iBAAzC;AAEA,IAAMC,aAAa,GAAG;EAClBC,OAAO,EAAE,IADS;EACH;EACfC,iBAAiB,EAAE,IAFD,CAEO;;AAFP,CAAtB;;IAKMC,W;;;EACF,uBAAc;IAAA;;IAAA;;IACV;;IADU,MAWdC,aAXc,GAWE,YAAM;MAClB,MAAKC,WAAL,GAAmB,IAAIR,UAAJ,CAAe;QAAEG,aAAa,EAAbA,aAAF;QAAiBM,OAAO,EAAE;MAA1B,CAAf,CAAnB;MACA,MAAKC,UAAL,GAAkB,KAAlB;MACAR,aAAa,CAACS,IAAd,CAAmB,WAAnB,EAAgC;QAAEC,IAAI,EAAE;MAAR,CAAhC;IACH,CAfa;;IAAA,MAuBdC,QAvBc,GAuBH,YAAM;MACb,MAAKL,WAAL,GAAmB,IAAIR,UAAJ,CAAe;QAAEc,SAAS,EAAE,IAAb;QAAmBX,aAAa,EAAbA,aAAnB;QAAkCM,OAAO,EAAE;MAA3C,CAAf,CAAnB;;MACA,MAAKD,WAAL,CAAiBO,EAAjB,CAAoB,QAApB,EAA8B,UAAAC,IAAI,EAAI;QAClC,IAAIA,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACE,kBAA7B,EAAiD;QACjDC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,IAAjC;QACAd,aAAa,CAACS,IAAd,CAAmB,YAAnB,EAAiCK,IAAjC;MACH,CAJD;IAKH,CA9Ba;;IAAA,MAsCdK,SAtCc,GAsCF,UAACC,MAAD,EAAY;MACpBA,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeF,MAAf,CAAT;;MACA,MAAKd,WAAL,CAAiBc,MAAjB,CAAwBA,MAAxB,EAFoB,CAEa;;;MAEjC,MAAKd,WAAL,CAAiBO,EAAjB,CAAoB,QAApB,EAA8B,UAAAC,IAAI,EAAI;QAClC,IAAIA,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACE,kBAA7B,EAAiD;QACjDC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,IAAlC;;QACA,IAAI,CAAC,MAAKN,UAAV,EAAsB;UAClBR,aAAa,CAACS,IAAd,CAAmB,aAAnB,EAAkCK,IAAlC;UACA,MAAKN,UAAL,GAAkB,IAAlB;QACH;MACJ,CAPD;;MAQA,MAAKe,SAAL;IACH,CAnDa;;IAAA,MAyDdC,UAzDc,GAyDD,UAACJ,MAAD,EAAY;MACrBA,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeF,MAAf,CAAT;;MACA,MAAKd,WAAL,CAAiBc,MAAjB,CAAwBA,MAAxB,EAFqB,CAEY;;;MACjC,MAAKG,SAAL;IACH,CA7Da;;IAEV,MAAKjB,WAAL,GAAmB,IAAnB;IACA,MAAKE,UAAL,GAAkB,IAAlB;IAHU;EAIb;EAED;AACJ;AACA;AACA;AACA;;;;;gCAqDgB;MAAA;;MACR,IAAI;QACA;QACA,KAAKF,WAAL,CAAiBO,EAAjB,CAAoB,SAApB,EAA+B,YAAM;UACjC;UACAjB,KAAK,CAAC6B,eAAN;UACA7B,KAAK,CAAC8B,yBAAN;UACAT,OAAO,CAACC,GAAR,CAAY,iBAAZ;QACH,CALD;QAMA,KAAKZ,WAAL,CAAiBO,EAAjB,CAAoB,MAApB,EAA4B,UAACC,IAAD,EAAU;UAClC;UACA,IAAIlB,KAAK,CAAC+B,gBAAN,EAAJ,EACI5B,cAAc,CAAC6B,WAAf,CAA2Bd,IAA3B;QACP,CAJD;QAKA,KAAKR,WAAL,CAAiBO,EAAjB,CAAoB,OAApB,EAA6B,YAAM;UAC/B;UACAI,OAAO,CAACC,GAAR,CAAY,eAAZ;;UACA,MAAI,CAACW,eAAL;QACH,CAJD;QAKA,KAAKvB,WAAL,CAAiBO,EAAjB,CAAoB,OAApB,EAA6B,UAACiB,KAAD,EAAW;UACpC;UACAb,OAAO,CAACa,KAAR,CAAc,eAAd,EAA+BA,KAA/B;UACAlC,KAAK,CAAC6B,eAAN;;UACA,MAAI,CAACI,eAAL;QACH,CALD;MAMH,CAxBD,CAwBE,OAAOC,KAAP,EAAc;QACZb,OAAO,CAACa,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;MACH;IACJ;;;sCAEiB;MACd;MACA,IAAI,KAAKxB,WAAT,EAAsB;QAClB,KAAKA,WAAL,CAAiByB,OAAjB;QACA,KAAKvB,UAAL,GAAkB,KAAlB;QACA,KAAKF,WAAL,GAAmB,IAAnB;QACAV,KAAK,CAAC6B,eAAN;QACA7B,KAAK,CAACoC,oBAAN;MACH;IACJ;;;;EAvGqBrC,KAAK,CAACsC,S;;IA2G1BC,oB;;;;;;;qCAGsB;MACpB,IAAIC,MAAM,GAAG,IAAI/B,WAAJ,EAAb;MACA,OAAO+B,MAAP;IACH;;;kCAEqB;MAClB,IAAI,CAACD,oBAAoB,CAACE,QAA1B,EAAoC;QAChCF,oBAAoB,CAACE,QAArB,GAAgCF,oBAAoB,CAACG,cAArB,EAAhC;MACH;;MACD,OAAOH,oBAAoB,CAACE,QAA5B;IACH;;;;;;AAbCF,oB,CAEKE,Q,GAAW,I;AActB,eAAeF,oBAAoB,CAACI,WAArB,EAAf"},"metadata":{},"sourceType":"module"}