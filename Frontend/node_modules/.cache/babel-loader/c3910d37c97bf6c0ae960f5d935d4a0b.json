{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\src\\\\components\\\\components-overview\\\\CustomFileUpload.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Store } from \"../../flux\";\n\nvar CustomFileUpload = function CustomFileUpload(props) {\n  var _useState = useState(Store.getLocalFilesList()),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileList = _useState2[0],\n      setFileList = _useState2[1];\n  /**\n   * This function fetches the local file uploaded and sets it in the local state array.\n   * @param {*} event \n   */\n\n\n  var changeHandler = function changeHandler(event) {\n    setFileList(function (fileList) {\n      return [].concat(_toConsumableArray(fileList), [event.target.files[0]]);\n    });\n    props.newUpload(event.target.files[0]);\n  };\n  /**\n   * This function listens to any change in the fileList state object and emits the files to the parent component.\n   * The onFileUpload() function is the way to share data with the parent component.\n   */\n\n\n  useEffect(function () {\n    console.log(\"File List: \", fileList);\n    props.onFileUpload(fileList);\n    Store.updateFileList(fileList);\n  }, [fileList]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    disabled: props.disabled,\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile2\",\n    onChange: changeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Choose file...\")));\n};\n\nexport default CustomFileUpload;","map":{"version":3,"names":["React","useState","useEffect","Store","CustomFileUpload","props","getLocalFilesList","fileList","setFileList","changeHandler","event","target","files","newUpload","console","log","onFileUpload","updateFileList","disabled"],"sources":["C:/Users/simra/Documents/P2P FILE SHARING VERSIONS/P2P File Sharing Project 5.0/Frontend/src/components/components-overview/CustomFileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Store } from \"../../flux\";\n\nconst CustomFileUpload = (props) => {\n  const [fileList, setFileList] = useState(Store.getLocalFilesList());\n\n  /**\n   * This function fetches the local file uploaded and sets it in the local state array.\n   * @param {*} event \n   */\n  const changeHandler = (event) => {\n    setFileList(fileList => [...fileList, event.target.files[0]]);\n    props.newUpload(event.target.files[0]);\n  };\n\n  /**\n   * This function listens to any change in the fileList state object and emits the files to the parent component.\n   * The onFileUpload() function is the way to share data with the parent component.\n   */\n  useEffect(() => {\n    console.log(\"File List: \", fileList);\n    props.onFileUpload(fileList);\n    Store.updateFileList(fileList);\n  }, [fileList])\n\n  return (\n    <div className=\"custom-file mb-3\">\n      <div>\n        <input disabled={props.disabled} type=\"file\" className=\"custom-file-input\" id=\"customFile2\" onChange={changeHandler} />\n        <label className=\"custom-file-label\" htmlFor=\"customFile2\">\n          Choose file...\n        </label>\n      </div>\n    </div>)\n};\n\nexport default CustomFileUpload;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;EAAA,gBACFJ,QAAQ,CAACE,KAAK,CAACG,iBAAN,EAAD,CADN;EAAA;EAAA,IAC3BC,QAD2B;EAAA,IACjBC,WADiB;EAGlC;AACF;AACA;AACA;;;EACE,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;IAC/BF,WAAW,CAAC,UAAAD,QAAQ;MAAA,oCAAQA,QAAR,IAAkBG,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;IAAA,CAAT,CAAX;IACAP,KAAK,CAACQ,SAAN,CAAgBH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB;EACD,CAHD;EAKA;AACF;AACA;AACA;;;EACEV,SAAS,CAAC,YAAM;IACdY,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,QAA3B;IACAF,KAAK,CAACW,YAAN,CAAmBT,QAAnB;IACAJ,KAAK,CAACc,cAAN,CAAqBV,QAArB;EACD,CAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,QAAQ,EAAEF,KAAK,CAACa,QAAvB;IAAiC,IAAI,EAAC,MAAtC;IAA6C,SAAS,EAAC,mBAAvD;IAA2E,EAAE,EAAC,aAA9E;IAA4F,QAAQ,EAAET,aAAtG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAO,SAAS,EAAC,mBAAjB;IAAqC,OAAO,EAAC,aAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAFF,CADF,CADF;AASD,CA/BD;;AAiCA,eAAeL,gBAAf"},"metadata":{},"sourceType":"module"}