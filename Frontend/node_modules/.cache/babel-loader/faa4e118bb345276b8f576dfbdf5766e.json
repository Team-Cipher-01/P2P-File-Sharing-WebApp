{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\simra\\\\Documents\\\\P2P FILE SHARING VERSIONS\\\\P2P File Sharing Project 5.0\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport { config } from \"../config\";\nimport Webrtc from \"../services/webrtc\";\nvar _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems(),\n  userId: '',\n  authenticated: false,\n  roomEmpty: true,\n  localFilesList: [],\n  remoteFilesList: [],\n  searchQuery: '',\n  requestedFile: null,\n  lastAddedRemoteFile: null,\n  homeVisited: false,\n  peerConnected: false\n};\n\nvar Store = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  function Store() {\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Store).call(this));\n    _this.registerToActions = _this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSidebar = _this.toggleSidebar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    Dispatcher.register(_this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n    if (config.env === 'dev') {\n      _store.userId = Webrtc.createUUID;\n      _store.authenticated = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"homeVisited\",\n    value: function homeVisited() {\n      if (!_store.homeVisited) {\n        _store.homeVisited = true;\n      }\n    }\n  }, {\n    key: \"getHomeVisited\",\n    value: function getHomeVisited() {\n      return _store.homeVisited;\n    }\n  }, {\n    key: \"registerToActions\",\n    value: function registerToActions(_ref) {\n      var actionType = _ref.actionType,\n          payload = _ref.payload;\n\n      switch (actionType) {\n        case Constants.TOGGLE_SIDEBAR:\n          this.toggleSidebar();\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      _store.menuVisible = !_store.menuVisible;\n      this.emit(Constants.CHANGE);\n    }\n  }, {\n    key: \"toggleRoomEmpty\",\n    value: function toggleRoomEmpty() {\n      _store.roomEmpty = !_store.roomEmpty;\n      this.emit(Constants.ROOM_EMPTY);\n    }\n  }, {\n    key: \"peerConnectionEstablished\",\n    value: function peerConnectionEstablished() {\n      _store.peerConnected = true;\n    }\n  }, {\n    key: \"peerConnectionClosed\",\n    value: function peerConnectionClosed() {\n      _store.peerConnected = false;\n    }\n  }, {\n    key: \"getPeerConnectionState\",\n    value: function getPeerConnectionState() {\n      return _store.peerConnected;\n    }\n  }, {\n    key: \"updateDownloadProgress\",\n    value: function updateDownloadProgress(downloadProgress) {\n      this.emit(Constants.DOWNLOAD_PROGRESS, downloadProgress);\n    }\n  }, {\n    key: \"updateSocketId\",\n    value: function updateSocketId(socketId) {\n      _store.socketId = socketId;\n    }\n  }, {\n    key: \"addChangeListener\",\n    value: function addChangeListener(type, callback) {\n      this.on(type, callback);\n    }\n  }, {\n    key: \"removeChangeListener\",\n    value: function removeChangeListener(type, callback) {\n      this.removeListener(type, callback);\n    }\n  }, {\n    key: \"getMenuState\",\n    value: function getMenuState() {\n      return _store.menuVisible;\n    }\n  }, {\n    key: \"getSidebarItems\",\n    value: function getSidebarItems() {\n      return _store.navItems;\n    }\n  }, {\n    key: \"getRoomEmpty\",\n    value: function getRoomEmpty() {\n      return _store.roomEmpty;\n    }\n  }, {\n    key: \"setUserId\",\n    value: function setUserId(userId) {\n      _store.userId = userId;\n      _store.authenticated = true;\n    }\n  }, {\n    key: \"getUserId\",\n    value: function getUserId() {\n      return _store.userId;\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return _store.authenticated;\n    }\n  }, {\n    key: \"setCurrentSearchQuery\",\n    value: function setCurrentSearchQuery(searchQuery) {\n      _store.searchQuery = searchQuery;\n    }\n  }, {\n    key: \"fetchSearchQuery\",\n    value: function fetchSearchQuery() {\n      return _store.searchQuery;\n    }\n  }, {\n    key: \"updateFileList\",\n    value: function updateFileList(fileList) {\n      _store.localFilesList = fileList;\n    }\n  }, {\n    key: \"setRequestedFile\",\n    value: function setRequestedFile(file) {\n      _store.requestedFile = file;\n      _store.fileRequested = true;\n      this.updateDownloadProgress(0);\n      _store.totalChunksReceived = 0;\n      _store.totalExpectedChunks = Math.ceil(Number(file.size) / (16 * 1024));\n      this.emit(Constants.ON_FILE_REQUEST);\n    }\n  }, {\n    key: \"getFileRequested\",\n    value: function getFileRequested() {\n      return _store.requestedFile;\n    }\n  }, {\n    key: \"setFileRequested\",\n    value: function setFileRequested(fileRequested) {\n      _store.fileRequested = fileRequested;\n    }\n  }, {\n    key: \"findFile\",\n    value: function findFile(fileMetadata) {\n      return _store.localFilesList.find(function (file) {\n        return file.name === fileMetadata.name;\n      });\n    }\n  }, {\n    key: \"getTotalExpectedChunks\",\n    value: function getTotalExpectedChunks() {\n      return _store.totalExpectedChunks;\n    }\n  }, {\n    key: \"setLastAddedRemoteFile\",\n    value: function setLastAddedRemoteFile(lastAddedRemoteFile) {\n      _store.lastAddedRemoteFile = lastAddedRemoteFile;\n    }\n  }, {\n    key: \"updateRemoteFileList\",\n    value: function updateRemoteFileList(remoteFilesList) {\n      _store.remoteFilesList = remoteFilesList;\n    }\n  }, {\n    key: \"getLastAddedRemoteFile\",\n    value: function getLastAddedRemoteFile() {\n      return _store.lastAddedRemoteFile;\n    }\n  }, {\n    key: \"getRemoteFilesList\",\n    value: function getRemoteFilesList() {\n      return _store.remoteFilesList;\n    }\n  }, {\n    key: \"getLocalFilesList\",\n    value: function getLocalFilesList() {\n      return _store.localFilesList;\n    }\n  }, {\n    key: \"getSocketId\",\n    value: function getSocketId() {\n      return _store.socketId;\n    }\n  }]);\n\n  return Store;\n}(EventEmitter);\n\nexport default new Store();","map":{"version":3,"names":["EventEmitter","Dispatcher","Constants","getSidebarNavItems","config","Webrtc","_store","menuVisible","navItems","userId","authenticated","roomEmpty","localFilesList","remoteFilesList","searchQuery","requestedFile","lastAddedRemoteFile","homeVisited","peerConnected","Store","registerToActions","bind","toggleSidebar","register","env","createUUID","actionType","payload","TOGGLE_SIDEBAR","emit","CHANGE","ROOM_EMPTY","downloadProgress","DOWNLOAD_PROGRESS","socketId","type","callback","on","removeListener","fileList","file","fileRequested","updateDownloadProgress","totalChunksReceived","totalExpectedChunks","Math","ceil","Number","size","ON_FILE_REQUEST","fileMetadata","find","name"],"sources":["C:/Users/simra/Documents/P2P FILE SHARING VERSIONS/P2P File Sharing Project 5.0/Frontend/src/flux/store.js"],"sourcesContent":["import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport { config } from \"../config\";\nimport Webrtc from \"../services/webrtc\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems(),\n  userId: '',\n  authenticated: false,\n  roomEmpty: true,\n  localFilesList: [],\n  remoteFilesList: [],\n  searchQuery: '',\n  requestedFile: null,\n  lastAddedRemoteFile: null,\n  homeVisited: false,\n  peerConnected: false,\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n\n    if (config.env === 'dev') {\n      _store.userId = Webrtc.createUUID;\n      _store.authenticated = true;\n    }\n  }\n\n  homeVisited() {\n    if(!_store.homeVisited) {\n      _store.homeVisited = true;\n    }\n  }\n\n  getHomeVisited() {\n    return _store.homeVisited;\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  toggleRoomEmpty() {\n    _store.roomEmpty = !_store.roomEmpty;\n    this.emit(Constants.ROOM_EMPTY);\n  }\n\n  peerConnectionEstablished() {\n    _store.peerConnected = true;\n  }\n\n  peerConnectionClosed() {\n    _store.peerConnected = false;\n  }\n\n  getPeerConnectionState() {\n    return _store.peerConnected;\n  }\n \n  updateDownloadProgress(downloadProgress) {\n    this.emit(Constants.DOWNLOAD_PROGRESS, downloadProgress);\n  }\n\n  updateSocketId(socketId) {\n    _store.socketId = socketId;\n  }\n\n  addChangeListener(type, callback) {\n    this.on(type, callback);\n  }\n\n  removeChangeListener(type, callback) {\n    this.removeListener(type, callback);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getRoomEmpty() {\n    return _store.roomEmpty;\n  }\n\n  setUserId(userId) {\n    _store.userId = userId;\n    _store.authenticated = true;\n  }\n\n  getUserId() {\n    return _store.userId;\n  }\n\n  isAuthenticated() {\n    return _store.authenticated;\n  }\n\n  setCurrentSearchQuery(searchQuery) {\n    _store.searchQuery = searchQuery;\n  }\n\n  fetchSearchQuery() {\n    return _store.searchQuery;\n  }\n\n  updateFileList(fileList) {\n    _store.localFilesList = fileList;\n  }\n\n  setRequestedFile(file) {\n    _store.requestedFile = file;\n    _store.fileRequested = true;\n    this.updateDownloadProgress(0);\n    _store.totalChunksReceived = 0;\n    _store.totalExpectedChunks = Math.ceil(Number(file.size) / (16 * 1024));\n    this.emit(Constants.ON_FILE_REQUEST);\n  }\n\n  getFileRequested() {\n    return _store.requestedFile;\n  }\n\n  setFileRequested(fileRequested) {\n    _store.fileRequested = fileRequested;\n  }\n\n  findFile(fileMetadata) {\n    return _store.localFilesList.find(file => file.name === fileMetadata.name);\n  }\n\n  getTotalExpectedChunks() {\n    return _store.totalExpectedChunks;\n  }\n\n  setLastAddedRemoteFile(lastAddedRemoteFile) {\n    _store.lastAddedRemoteFile = lastAddedRemoteFile;\n  }\n\n  updateRemoteFileList(remoteFilesList) {\n    _store.remoteFilesList = remoteFilesList;\n  }\n\n  getLastAddedRemoteFile() {\n    return _store.lastAddedRemoteFile;\n  }\n\n  getRemoteFilesList() {\n    return _store.remoteFilesList;\n  }\n\n  getLocalFilesList() {\n    return _store.localFilesList;\n  }\n\n  getSocketId() {\n    return _store.socketId;\n  }\n}\n\nexport default new Store();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}